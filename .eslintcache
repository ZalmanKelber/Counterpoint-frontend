[{"/Users/alexkelber/Documents/Python/Jeppesen/ReactFlaskApp/client/src/index.js":"1","/Users/alexkelber/Documents/Python/Jeppesen/ReactFlaskApp/client/src/components/App.js":"2","/Users/alexkelber/Documents/Python/Jeppesen/ReactFlaskApp/client/src/components/Enter.js":"3","/Users/alexkelber/Documents/Python/Jeppesen/ReactFlaskApp/client/src/components/Gallery.js":"4","/Users/alexkelber/Documents/Python/Jeppesen/ReactFlaskApp/client/src/components/About.js":"5","/Users/alexkelber/Documents/Python/Jeppesen/ReactFlaskApp/client/src/components/Landing.js":"6","/Users/alexkelber/Documents/Python/Jeppesen/ReactFlaskApp/client/src/components/Create.js":"7","/Users/alexkelber/Documents/Python/Jeppesen/ReactFlaskApp/client/src/components/Footer.js":"8","/Users/alexkelber/Documents/Python/Jeppesen/ReactFlaskApp/client/src/components/Navbar.js":"9","/Users/alexkelber/Documents/Python/Jeppesen/ReactFlaskApp/client/src/components/SelectType.js":"10","/Users/alexkelber/Documents/Python/Jeppesen/ReactFlaskApp/client/src/components/SelectLength.js":"11","/Users/alexkelber/Documents/Python/Jeppesen/ReactFlaskApp/client/src/components/SelectMode.js":"12","/Users/alexkelber/Documents/Python/Jeppesen/ReactFlaskApp/client/src/components/SelectRanges.js":"13","/Users/alexkelber/Documents/Python/Jeppesen/ReactFlaskApp/client/src/components/SelectCantusFirmusIndex.js":"14","/Users/alexkelber/Documents/Python/Jeppesen/ReactFlaskApp/client/src/components/DisplayResult.js":"15","/Users/alexkelber/Documents/Python/Jeppesen/ReactFlaskApp/client/src/components/SelectStepHeader.js":"16"},{"size":211,"mtime":1609613712036,"results":"17","hashOfConfig":"18"},{"size":1028,"mtime":1609754210076,"results":"19","hashOfConfig":"18"},{"size":528,"mtime":1609617263009,"results":"20","hashOfConfig":"18"},{"size":4008,"mtime":1609731140297,"results":"21","hashOfConfig":"18"},{"size":9184,"mtime":1609741559041,"results":"22","hashOfConfig":"18"},{"size":3624,"mtime":1609596547765,"results":"23","hashOfConfig":"18"},{"size":4979,"mtime":1609732677825,"results":"24","hashOfConfig":"18"},{"size":262,"mtime":1609566480273,"results":"25","hashOfConfig":"18"},{"size":1100,"mtime":1609572054158,"results":"26","hashOfConfig":"18"},{"size":7668,"mtime":1609728984639,"results":"27","hashOfConfig":"18"},{"size":1666,"mtime":1609400243081,"results":"28","hashOfConfig":"18"},{"size":4748,"mtime":1609728876068,"results":"29","hashOfConfig":"18"},{"size":3518,"mtime":1609732820937,"results":"30","hashOfConfig":"18"},{"size":1226,"mtime":1609549887529,"results":"31","hashOfConfig":"18"},{"size":5016,"mtime":1609732666475,"results":"32","hashOfConfig":"18"},{"size":819,"mtime":1609729027662,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1fjfkul",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alexkelber/Documents/Python/Jeppesen/ReactFlaskApp/client/src/index.js",[],["73","74"],"/Users/alexkelber/Documents/Python/Jeppesen/ReactFlaskApp/client/src/components/App.js",[],"/Users/alexkelber/Documents/Python/Jeppesen/ReactFlaskApp/client/src/components/Enter.js",[],"/Users/alexkelber/Documents/Python/Jeppesen/ReactFlaskApp/client/src/components/Gallery.js",["75","76"],"import React from \"react\";\nimport AudioPlayer from \"react-h5-audio-player\";\n\nimport Navbar from \"./Navbar\";\nimport Footer from \"./Footer\";\n\nimport \"../css/Gallery.css\"\n\nconst modes = [\"ionian\", \"dorian\", \"phrygian\", \"lydian\", \"mixolydian\", \"aeolian\"];\n\nclass Gallery extends React.Component {\n\n    state = { selectedMode: null }\n\n    selectMode = mode => {\n        this.setState({ ...this.state, selectedMode: mode })\n    }\n\n\n    render() {\n\n        const audioFiles = [\n            `${process.env.PUBLIC_URL}/frontendAudio/ionian.wav`, \n            `${process.env.PUBLIC_URL}/frontendAudio/dorian.wav`, \n            `${process.env.PUBLIC_URL}/frontendAudio/phrygian.wav`, \n            `${process.env.PUBLIC_URL}/frontendAudio/lydian.wav`, \n            `${process.env.PUBLIC_URL}/frontendAudio/mixolydian.wav`, \n            `${process.env.PUBLIC_URL}/frontendAudio/aeolian.wav`\n        ];\n        const imageFiles = [\n            `${process.env.PUBLIC_URL}/images/ionian_example.png`, \n            `${process.env.PUBLIC_URL}/images/dorian_example.png`, \n            `${process.env.PUBLIC_URL}/images/phrygian_example.png`, \n            `${process.env.PUBLIC_URL}/images/lydian_example.png`, \n            `${process.env.PUBLIC_URL}/images/mixolydian_example.png`, \n            `${process.env.PUBLIC_URL}/images/aeolian_example.png`\n        ];\n        \n\n        return (\n            <div className=\"gallery\">\n                <Navbar />\n                <h1 className=\"gallery-title\">GALLERY</h1>\n                <div className=\"gallery-middle-section\">\n                    <h2 className=\"gallery-instructions\">Click on a mode to view one of the best examples of imitative counterpoint produced by the program</h2>\n                    <div className=\"gallery-container\">\n                        <div className=\"list-modes\">\n                            {\n                                modes.map((mode, i) => {\n                                    return (\n                                        <div \n                                            key={i} \n                                            className={ mode === this.state.selectedMode ? \"mode-title-container selected-mode-title\": \"mode-title-container\"}\n                                            onClick={() => this.selectMode(mode)} \n                                        >\n                                            <div className=\"mode-title\">\n                                                {mode.charAt(0).toUpperCase() + mode.slice(1)}\n                                            </div>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                    </div>\n                </div>\n                {\n                    modes.map((mode, i) => {\n                        if (this.state.selectedMode === mode) {\n                            return (\n                                <div key={i} className=\"gallery-result\">\n                                    <div className=\"gallery-audio-wrapper\">\n                                        <AudioPlayer\n                                            autoPlay\n                                            src={audioFiles[i]}\n                                            showJumpControls={false}\n                                            customAdditionalControls={[]}\n                                            customVolumeControls={[]}\n                                            layout=\"horizontal-reverse\"\n                                        />\n                                    </div>\n                                    <img className=\"gallery-image\" src={imageFiles[i]} />\n                                </div>\n                            )\n                        }\n                    })\n                }\n                <div className=\"gallery-space\"></div>\n                <Footer />\n            </div>\n        );\n    }\n\n}\n\nexport default Gallery","/Users/alexkelber/Documents/Python/Jeppesen/ReactFlaskApp/client/src/components/About.js",[],"/Users/alexkelber/Documents/Python/Jeppesen/ReactFlaskApp/client/src/components/Landing.js",["77"],"\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"../css/Landing.css\";\n\nconst START_TIME = 1000\nconst FIRST_FADE = 2000\nconst SECOND_FADE = 1500\nconst THIRD_FADE = 1500\nconst INTERVAL_TIME = 10\n\n\nclass Landing extends React.Component {\n\n    state = { \n        audio: null,\n        opacityLevels: {\n            landing: 1,\n            title: 0,\n            menu: 0\n        } \n    }\n\n    componentDidMount = () => {\n        this.startPage()\n        setTimeout(() => {\n           this.firstFade() \n           setTimeout(() => {\n               this.secondFade()\n               setTimeout(() => {\n                   this.thirdFade()\n               }, SECOND_FADE);\n           }, FIRST_FADE);\n        }, START_TIME);\n    }\n\n    componentWillUnmount = () => {\n        this.state.audio.pause()\n    }\n\n    startPage = () => {\n        document.getElementById(\"landing\").className = \"landing landing-before-transition\";\n        const audio = new Audio(process.env.PUBLIC_URL + \"/frontendAudio/mixolydian.wav\");\n        audio.play();\n        this.setState({ ...this.state, audio: audio })\n    }\n\n    firstFade = () => {\n        let count = 0;\n        const handler = setInterval(() => {\n            count++;\n            const newOpacity = 1 - (count * .3 * INTERVAL_TIME / FIRST_FADE);\n            this.setState({ ...this.state, opacityLevels: {\n                landing: newOpacity, title: 0, menu: 0\n            } })\n            if (count >= FIRST_FADE / INTERVAL_TIME) {\n                clearInterval(handler);\n                this.setState({ ...this.state, opacityLevels: {\n                    landing: 1, title: 0, menu: 0\n                } })\n                document.getElementById(\"landing\").className = \"landing landing-after-transition\";\n            }\n        }, INTERVAL_TIME);\n    }\n\n    secondFade = () => {\n        let count = 0;\n        const handler = setInterval(() => {\n            count++;\n            const newOpacity = count * INTERVAL_TIME / SECOND_FADE;\n            this.setState({ ...this.state, opacityLevels: {\n                landing: 1, title: newOpacity, menu: 0\n            } })\n            if (count >= SECOND_FADE / INTERVAL_TIME) {\n                clearInterval(handler);\n            }\n        }, INTERVAL_TIME);\n    }\n\n    thirdFade = () => {\n        let count = 0;\n        const handler = setInterval(() => {\n            count++;\n            const newOpacity = count * INTERVAL_TIME / THIRD_FADE;\n            this.setState({ ...this.state, opacityLevels: {\n                landing: 1, title: 1, menu: newOpacity\n            } })\n            if (count >= THIRD_FADE / INTERVAL_TIME) {\n            }\n        }, INTERVAL_TIME);\n    }\n\n\n    render() {\n\n        return (\n            <>\n            <div id=\"landing\" style={{opacity: this.state.opacityLevels.landing}}>\n                <h1 className=\"landing-title\" style={{opacity: this.state.opacityLevels.title}}>\n                    C O U N T E R P O I N T &emsp; &emsp; G E N E R A T O R\n                </h1>\n                <div id=\"menu\" className=\"landing-menu\" style={{opacity: this.state.opacityLevels.menu}}>\n                    <Link to=\"/create\">\n                        <h3 className=\"menu-option\">GENERATE EXAMPLES</h3>\n                    </Link>\n                    <Link to=\"/gallery\">\n                        <h3 className=\"menu-option\">GALLERY</h3>\n                    </Link>\n                    <Link to=\"/about\">\n                        <h3 className=\"menu-option\">ABOUT</h3>\n                    </Link>\n                </div>\n            </div>\n            </>\n        );\n    }\n\n}\n\nexport default Landing ","/Users/alexkelber/Documents/Python/Jeppesen/ReactFlaskApp/client/src/components/Create.js",["78"],"import React from \"react\";\n\nimport Navbar from \"./Navbar\";\nimport SelectType from \"./SelectType\";\nimport SelectMode from \"./SelectMode\";\nimport SelectRanges from \"./SelectRanges\";\nimport SelectCantusFirmusIndex from \"./SelectCantusFirmusIndex\";\nimport SelectLength from \"./SelectLength\";\nimport DisplayResult from \"./DisplayResult\";\nimport Footer from \"./Footer\";\n\nimport \"../css/Create.css\"\n\nconst phases = {\n    SELECT_TYPE: \"SELECT_TYPE\",\n    SELECT_MODE: \"SELECT_MODE\",\n    SELECT_RANGES: \"SELECT_RANGES\",\n    SELECT_CANTUS_FRMUS_INDEX: \"SELECT_CANTUS_FIRMUS_INDEX\",\n    SELECT_LENGTH: \"SELECT_LENGTH\",\n    DISPLAY_RESULT: \"DISPLAY_RESULT\"\n}\n\n\nclass Create extends React.Component {\n\n    state = {\n        currentPhase: phases.SELECT_TYPE,\n        selectedValues: {\n            type: null, mode: null, lines: null, length: null, cantusFirmusIndex: 0\n        }\n    }\n\n    getUpdateFunction = parameterToChange => {\n        const updateFunction = newValue => {\n            this.setState({\n                ...this.state,\n                selectedValues: {\n                    ...this.state.selectedValues,\n                    [parameterToChange]: newValue\n                }\n            });\n        }\n        return updateFunction;\n    }\n\n    getChangePhaseFunction = newPhase => {\n        const getChangePhaseFunction = () => {\n            this.setState({\n                ...this.state,\n                currentPhase: newPhase\n            });\n        }\n        return getChangePhaseFunction;\n    }\n\n    refreshState = () => {\n        this.setState({\n            currentPhase: phases.SELECT_TYPE,\n            selectedValues: {\n                type: null, mode: null, lines: null, length: null, cantusFirmusIndex: 0\n            }\n        })\n    }\n\n    refreshDisplayResult = async () => {\n        await this.setState({\n            ...this.state,\n            currentPhase: phases.SELECT_LENGTH\n        });\n        this.setState({\n            ...this.state,\n            currentPhase: phases.DISPLAY_RESULT\n        });\n    }\n\n    render() {\n        let DisplayComponent;\n        let goForward;\n        let goBackward;\n        let updateValue;\n        switch (this.state.currentPhase) {\n            case phases.SELECT_TYPE:\n                DisplayComponent = SelectType;\n                goForward = this.getChangePhaseFunction(phases.SELECT_MODE);\n                updateValue = this.getUpdateFunction(\"type\");\n                break;\n            case phases.SELECT_MODE:\n                DisplayComponent = SelectMode;\n                goForward = this.getChangePhaseFunction(phases.SELECT_RANGES);\n                goBackward = this.getChangePhaseFunction(phases.SELECT_TYPE);\n                updateValue = this.getUpdateFunction(\"mode\");\n                break;\n            case phases.SELECT_RANGES:\n                DisplayComponent = SelectRanges;\n                if (this.state.selectedValues.type.substring(this.state.selectedValues.type.length - 7) === \"Species\") {\n                    goForward = this.getChangePhaseFunction(phases.SELECT_CANTUS_FRMUS_INDEX);\n                } else {\n                    goForward = this.getChangePhaseFunction(phases.SELECT_LENGTH);\n                }\n                goBackward = this.getChangePhaseFunction(phases.SELECT_MODE);\n                updateValue = this.getUpdateFunction(\"lines\");\n                break;\n            case phases.SELECT_CANTUS_FRMUS_INDEX:\n                DisplayComponent = SelectCantusFirmusIndex;\n                goForward = this.getChangePhaseFunction(phases.SELECT_LENGTH);\n                goBackward = this.getChangePhaseFunction(phases.SELECT_RANGES);\n                updateValue = this.getUpdateFunction(\"cantusFirmusIndex\");\n                break;\n            case phases.SELECT_LENGTH:\n                DisplayComponent = SelectLength;\n                goForward = this.getChangePhaseFunction(phases.DISPLAY_RESULT);\n                if (this.state.selectedValues.type.substring(this.state.selectedValues.type.length - 7) === \"Species\") {\n                    goBackward = this.getChangePhaseFunction(phases.SELECT_CANTUS_FRMUS_INDEX);\n                } else {\n                    goBackward = this.getChangePhaseFunction(phases.SELECT_RANGES);\n                }\n                updateValue = this.getUpdateFunction(\"length\");\n                break;\n            case phases.DISPLAY_RESULT:\n                DisplayComponent = DisplayResult;\n                break;\n        } \n\n        return (\n            <div className=\"main\">\n                <Navbar />\n                <DisplayComponent\n                    goForward={goForward}\n                    goBackward={goBackward}\n                    updateValue={updateValue}\n                    currentSelections={this.state.selectedValues}\n                    refreshState={this.refreshState}\n                    refreshDisplayResult={this.refreshDisplayResult}\n                />\n                <Footer />\n            </div>\n        );\n    }\n\n}\n\nexport default Create ","/Users/alexkelber/Documents/Python/Jeppesen/ReactFlaskApp/client/src/components/Footer.js",[],"/Users/alexkelber/Documents/Python/Jeppesen/ReactFlaskApp/client/src/components/Navbar.js",[],"/Users/alexkelber/Documents/Python/Jeppesen/ReactFlaskApp/client/src/components/SelectType.js",["79","80","81"],"import React from \"react\";\n\nimport SelectStepHeader from \"./SelectStepHeader\";\n\nimport \"../css/SelectType.css\";\n\nclass SelectType extends React.Component {\n\n    handleClick = async newValue => {\n        await this.props.updateValue(newValue);\n        this.props.goForward();\n    }\n\n    render() {\n\n        const stepTitle = \"STEP 1: CHOOSE TYPE\";\n        const stepDescription = `Select a type of counterpoint exercise to generate. \\r\\n\n                                This will be a short musical composition in the style of the Italian Renaissance composer Giovanni Pierluigi da Palestrina.`\n\n        return (\n            <>\n            <SelectStepHeader \n                stepTitle={stepTitle}\n                showGoBackButton={false}\n                stepDescription={stepDescription}\n            />\n            <div className=\"step-content\">\n                <div className=\"show-types\">\n                    <div className=\"arrow-container\">\n                        <div className=\"arrow-text\">(Simpler / Faster)</div>\n                        <div className=\"upward-triangle\"></div>\n                        <div className=\"arrow-body\"></div>\n                        <div className=\"arrow-filler\"></div>\n                        <div className=\"arrow-body\"></div>\n                        <div className=\"downward-triangle\"></div>\n                        <div className=\"arrow-text\">(More Complex)</div>\n                    </div>\n                    <div className=\"type-title solo-melody-title\">Solo Melodies:</div>\n                    <div className=\"type-title species-counterpoint-title\">Species \n                        Counterpoint: <br /><span className=\"complexity-warning\">(takes about 5-15 seconds)</span>\n                    </div>\n                    <div className=\"type-title two-part-counterpoint-title\">Two Part \n                     Counterpoint: <br /><span className=\"complexity-warning\">(takes about 5-30 seconds)</span>\n                    </div>\n                    <div className=\"type-selection cantus-firmus\" onClick={() => this.handleClick(\"cantusFirmus\")}>\n                        <div className=\"type-name\">Cantus Firmus</div>\n                        <div className=\"type-description\">Simple whole-note melody that exemplifies the most basic rules of \n                        melody in <a href=\"https://en.wikipedia.org/wiki/Giovanni_Pierluigi_da_Palestrina\" onClick={e => e.stopPropagation()} target=\"_blank\">\n                            Palestrina-style\n                            </a>\n                        </div>\n                    </div>\n                    <div className=\"type-selection free-melody\" onClick={() => this.handleClick(\"freeMelody\")}>\n                        <div className=\"type-name\">Free Melody</div>\n                        <div className=\"type-description\">Complete melody with different rhythmic values; displays all the rules of \n                        melody in Palestrina-style\n                        </div>\n                    </div>\n                    <div className=\"type-selection first-species\" onClick={() => this.handleClick(\"twoPartFirstSpecies\")}>\n                        <div className=\"type-name\">First Species</div>\n                        <div className=\"type-description\">Whole-note melody set against a Cantus Firmus; exemplifies the most basic rules of harmony:\n                        all intervals between two simultaneous notes are <a href=\"https://en.wikipedia.org/wiki/Consonance_and_dissonance\" onClick={e => e.stopPropagation()} target=\"_blank\">\n                            consonant\n                            </a>\n                        </div>\n                    </div>\n                    <div className=\"type-selection second-species\" onClick={() => this.handleClick(\"twoPartSecondSpecies\")}>\n                        <div className=\"type-name\">Second Species</div>\n                        <div className=\"type-description\">Half-note melody set against a Cantus Firmus; exemplifies simplest rules \n                        of <a href=\"https://en.wikipedia.org/wiki/Consonance_and_dissonance\" onClick={e => e.stopPropagation()} target=\"_blank\">\n                            dissonance\n                            </a> in harmony: dissonances only occur on weak beats\n                        </div>\n                    </div>\n                    <div className=\"type-selection third-species\" onClick={() => this.handleClick(\"twoPartThirdSpecies\")}>\n                        <div className=\"type-name\">Third Species</div>\n                        <div className=\"type-description\">Quarter-note melody set against a Cantus Firmus; exemplifies more complex rules of dissonance in harmony:\n                        several types of dissonance occur on weak beats</div>\n                    </div>\n                    <div className=\"type-selection fourth-species\" onClick={() => this.handleClick(\"twoPartFourthSpecies\")}>\n                        <div className=\"type-name\">Fourth Species</div>\n                        <div className=\"type-description\">Half-note and syncopated whole-note melody set against a Cantus Firmus; \n                        dissonances can occur on strong beats in the form of suspensions</div>\n                    </div>\n                    <div className=\"type-selection fifth-species\" onClick={() => this.handleClick(\"twoPartFifthSpecies\")}>\n                        <div className=\"type-name\">Fifth Species</div>\n                        <div className=\"type-description\">Free melody set against a Cantus Firmus; combines all rules of dissonance and harmony</div>\n                    </div>\n                    <div className=\"type-selection free-counterpoint\" onClick={() => this.handleClick(\"twoPartFreeCounterpoint\")}>\n                        <div className=\"type-name\">Free Counterpoint</div>\n                        <div className=\"type-description\">Two free melodies set against each other</div>\n                    </div>\n                    <div className=\"type-selection imitative-counterpoint\" onClick={() => this.handleClick(\"twoPartImitativeCounterpoint\")}>\n                        <div className=\"type-name\">Imitative Counterpoint</div>\n                        <div className=\"type-description\">Two free melodies that begin with the same theme or motif</div>\n                    </div>\n                    <div className=\"preview-image cantus-firmus-preview\" onClick={() => this.handleClick(\"cantusFirmus\")}></div>\n                    <div className=\"preview-image free-melody-preview\" onClick={() => this.handleClick(\"freeMelody\")}></div>\n                    <div className=\"preview-image first-species-preview\" onClick={() => this.handleClick(\"twoPartFirstSpecies\")}></div>\n                    <div className=\"preview-image second-species-preview\" onClick={() => this.handleClick(\"twoPartSecondSpecies\")}></div>\n                    <div className=\"preview-image third-species-preview\" onClick={() => this.handleClick(\"twoPartThirdSpecies\")}></div>\n                    <div className=\"preview-image fourth-species-preview\" onClick={() => this.handleClick(\"twoPartFourthSpecies\")}></div>\n                    <div className=\"preview-image fifth-species-preview\" onClick={() => this.handleClick(\"twoPartFifthSpecies\")}></div>\n                    <div className=\"preview-image free-counterpoint-preview\" onClick={() => this.handleClick(\"twoPartFreeCounterpoint\")}></div>\n                    <div className=\"preview-image imitative-counterpoint-preview\" onClick={() => this.handleClick(\"twoPartImitativeCounterpoint\")}></div>\n                    \n                </div>\n            </div>\n            </>\n        );\n    }\n}\n\nexport default SelectType;","/Users/alexkelber/Documents/Python/Jeppesen/ReactFlaskApp/client/src/components/SelectLength.js",["82"],"import React from \"react\";\n\nimport SelectStepHeader from \"./SelectStepHeader\";\n\nimport \"../css/SelectLength.css\";\n\nclass SelectLength extends React.Component {\n\n    handleClick = async newValue => {\n        await this.props.updateValue(newValue);\n        this.props.goForward();\n    }\n\n    render() {\n        const stepNumber = this.props.currentSelections.type.\n            substring(this.props.currentSelections.type.length - 7) === \"Species\" ? 5 : 4;\n\n        const measureOptions = [\"twoPartFreeCounterpoint\", \"twoPartImitativeCounterpoint\"]\n            .includes(this.props.currentSelections.type) ? [16, 17, 18] : [8, 9, 10, 11, 12]\n\n        const stepTitle = `STEP ${stepNumber}: CHOOSE NUMBER OF MEASURES`\n        return (\n            <>\n            <SelectStepHeader \n                stepTitle={stepTitle}\n                showGoBackButton={true}\n                goBackFunction={this.props.goBackward}\n            />\n            <div className=\"step-content\">\n                <div className=\"length-options\">\n                    {\n                        measureOptions.map((measure, i) => {\n                            return (\n                                <div \n                                    key={i} \n                                    className=\"measure-option\"\n                                    onClick={() => this.handleClick(measure)}\n                                >\n                                    {measure}\n                                </div>\n                            );\n                        })\n                    }\n                </div>\n            </div>\n            </>\n        );\n    }\n}\n\nexport default SelectLength;","/Users/alexkelber/Documents/Python/Jeppesen/ReactFlaskApp/client/src/components/SelectMode.js",[],"/Users/alexkelber/Documents/Python/Jeppesen/ReactFlaskApp/client/src/components/SelectRanges.js",[],"/Users/alexkelber/Documents/Python/Jeppesen/ReactFlaskApp/client/src/components/SelectCantusFirmusIndex.js",[],"/Users/alexkelber/Documents/Python/Jeppesen/ReactFlaskApp/client/src/components/DisplayResult.js",["83"],"import React from \"react\";\nimport AudioPlayer from \"react-h5-audio-player\";\nimport \"react-h5-audio-player/lib/styles.css\";\n\nimport \"../css/DisplayResult.css\";\n\nclass DisplayResult extends React.Component {\n\n    state = {\n        waitingForResults: true,\n        waitingForResultsDisplayPhase: 0,\n        blobURL: null,\n        midiPlayer: window.MIDIjs,\n        playing: false,\n        inProgress: false,\n        midiLength: 100\n    }\n\n    componentDidMount = async () => {\n        const jsonRequest = JSON.stringify(this.props.currentSelections);\n        const handler = setInterval(() => {\n            if (this.state.blobURL) {\n                clearInterval(handler);\n                this.setState({ ...this.state, waitingForResultsDisplayPhase: 0 });\n            } else {\n                let nextPhase = this.state.waitingForResultsDisplayPhase + 1\n                nextPhase %= 10;\n                this.setState({ ...this.state, waitingForResultsDisplayPhase: nextPhase });\n            }\n        }, 500);\n        const xml = new XMLHttpRequest();\n        xml.open(\"POST\", \"https://counterpoint-server.herokuapp.com/api\");\n        xml.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n        xml.responseType = \"blob\";\n        xml.onerror = () => {\n            this.tryAgain();\n        }\n        xml.onload = e => {\n            const url = window.URL.createObjectURL(xml.response);\n            this.setState({ ...this.state, blobURL: url, playing: true, inProgress: true });\n            this.state.midiPlayer.play(url)\n            this.state.midiPlayer.get_duration(url, seconds => this.setState({ ...this.state, midiLength: seconds }));\n            this.state.midiPlayer.player_callback = data => {\n                if (data.time > this.state.midiLength) {\n                    this.setState({ ...this.state, playing: false, inProgress: false });\n                }\n            }\n          };\n        xml.send(jsonRequest);\n        this.setState({ ...this.state, waitingForResults: false});\n\n    }\n\n    togglePlaying = () => {\n        if (this.state.playing) {\n            this.state.midiPlayer.pause();\n        } else if (this.state.inProgress) {\n            this.state.midiPlayer.resume();\n        } else {\n            this.state.midiPlayer.play(this.state.blobURL)\n        }\n        this.setState({ ...this.state, playing: !this.state.playing, inProgress: true });\n    }\n\n    componentWillUnmount = () => {\n        this.state.midiPlayer.stop()\n    }\n\n    getWaitingForResultsDisplayString = () => {\n        switch (this.state.waitingForResultsDisplayPhase) {\n            case 0:\n                return \"\";\n            case 1:\n                return \".\";\n            case 2:\n                return \"..\";\n            case 3:\n                return \"...\";\n            default:\n                return \"...waiting for results\";\n        }\n    }\n\n    downloadAudio = () => {\n        const link = document.createElement(\"a\");\n        link.download = \"counterpoint.mid\";\n        link.href = this.state.blobURL;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    }\n\n    tryAgain = () => {\n        this.props.refreshDisplayResult();\n    }\n\n    startNew = () => {\n        this.props.refreshState();\n    }\n\n    render() {\n        const waitingForResultsDisplayString = this.getWaitingForResultsDisplayString();\n\n        return (\n            <>\n            {\n                !this.state.blobURL && <div className=\"waiting-for-results\">{waitingForResultsDisplayString}</div>\n            }\n            {\n                this.state.blobURL && \n                <>\n                <h2 className=\"success-title\">Success!  Here's the composition you generated.  Click below to download as a MIDI file</h2>\n                <div className=\"success-container\">\n                    <div className=\"toggle-button-outer\" onClick={this.togglePlaying}>\n                        <div className={this.state.playing ? \"pause-button\" : \"play-button\"}></div>\n                    </div>\n                    {/* <div className=\"audio-player-container\">\n                        <AudioPlayer\n                            autoPlay\n                            src={this.state.blobURL}\n                            showJumpControls={false}\n                            customAdditionalControls={[]}\n                            customVolumeControls={[]}\n                            layout=\"horizontal-reverse\"\n                        />\n                    </div> */}\n                </div>\n                <h2 className=\"download-button results-button\" onClick={this.downloadAudio}>Download MIDI</h2>\n                <h2 className=\"generate-option results-button\" onClick={this.tryAgain}>Try again with same parameters</h2>\n                <h2 className=\"or\">or</h2>\n                <h2 className=\"start-new results-button\" onClick={this.startNew}>Start from the beginning</h2>\n                </>\n    \n            }\n            </>\n        );\n    }\n}\n\nexport default DisplayResult;","/Users/alexkelber/Documents/Python/Jeppesen/ReactFlaskApp/client/src/components/SelectStepHeader.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":67,"column":41,"nodeType":"90","messageId":"91","endLine":67,"endColumn":43},{"ruleId":"92","severity":1,"message":"93","line":81,"column":37,"nodeType":"94","endLine":81,"endColumn":90},{"ruleId":"95","severity":1,"message":"96","line":83,"column":15,"nodeType":"97","messageId":"98","endLine":83,"endColumn":22},{"ruleId":"99","severity":1,"message":"100","line":81,"column":9,"nodeType":"101","messageId":"102","endLine":122,"endColumn":10},{"ruleId":"103","severity":1,"message":"104","line":48,"column":143,"nodeType":"105","endLine":48,"endColumn":158},{"ruleId":"103","severity":1,"message":"104","line":62,"column":175,"nodeType":"105","endLine":62,"endColumn":190},{"ruleId":"103","severity":1,"message":"104","line":70,"column":129,"nodeType":"105","endLine":70,"endColumn":144},{"ruleId":"106","severity":1,"message":"107","line":15,"column":61,"nodeType":"108","messageId":"109","endLine":15,"endColumn":62,"fix":"110"},{"ruleId":"95","severity":1,"message":"111","line":2,"column":8,"nodeType":"97","messageId":"98","endLine":2,"endColumn":19},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'handler' is assigned a value but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"114","text":"115"},"'AudioPlayer' is defined but never used.","no-global-assign","no-unsafe-negation",[361,375],"\n            ."]