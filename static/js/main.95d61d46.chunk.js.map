{"version":3,"sources":["components/Landing.js","components/Enter.js","components/Navbar.js","components/SelectStepHeader.js","components/SelectType.js","components/SelectMode.js","components/SelectRanges.js","components/SelectCantusFirmusIndex.js","components/SelectLength.js","components/DisplayResult.js","components/Footer.js","components/Create.js","components/Gallery.js","components/About.js","components/App.js","index.js"],"names":["FIRST_FADE","SECOND_FADE","THIRD_FADE","INTERVAL_TIME","Landing","state","audio","opacityLevels","landing","title","menu","componentDidMount","startPage","setTimeout","firstFade","secondFade","thirdFade","componentWillUnmount","pause","document","getElementById","className","Audio","process","play","setState","count","handler","setInterval","newOpacity","clearInterval","id","style","opacity","this","to","React","Component","Enter","Navbar","onClick","window","location","reload","SelectStepHeader","props","showGoBackButton","goBackFunction","stepTitle","stepDescription","SelectType","handleClick","newValue","a","updateValue","goForward","href","e","stopPropagation","target","SelectMode","goBackward","SelectRanges","selected","selectedIndex","getNumberOfLines","includes","currentSelections","type","vocalRange","i","vocalRangesList","instructionString","map","vocalRanges","j","classList","toUpperCase","length","SelectCantusFirmusIndex","SelectLength","stepNumber","substring","measureOptions","measure","DisplayResult","waitingForResults","waitingForResultsDisplayPhase","blobURL","midiPlayer","MIDIjs","playing","inProgress","midiLength","jsonRequest","JSON","stringify","nextPhase","xml","XMLHttpRequest","open","setRequestHeader","responseType","onerror","tryAgain","onload","url","URL","createObjectURL","response","get_duration","seconds","player_callback","data","time","send","togglePlaying","resume","stop","getWaitingForResultsDisplayString","downloadAudio","link","createElement","download","body","appendChild","click","removeChild","refreshDisplayResult","startNew","refreshState","waitingForResultsDisplayString","Footer","phases","Create","currentPhase","selectedValues","mode","lines","cantusFirmusIndex","getUpdateFunction","parameterToChange","getChangePhaseFunction","newPhase","DisplayComponent","modes","Gallery","selectedMode","selectMode","audioFiles","imageFiles","charAt","slice","autoPlay","src","showJumpControls","customAdditionalControls","customVolumeControls","layout","About","App","herokuWakeup","console","log","path","exact","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.95d61d46.chunk.js","sourcesContent":["\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"../css/Landing.css\";\n\nconst START_TIME = 1000\nconst FIRST_FADE = 2000\nconst SECOND_FADE = 1500\nconst THIRD_FADE = 1500\nconst INTERVAL_TIME = 10\n\n\nclass Landing extends React.Component {\n\n    state = { \n        audio: null,\n        opacityLevels: {\n            landing: 1,\n            title: 0,\n            menu: 0\n        } \n    }\n\n    componentDidMount = () => {\n        this.startPage()\n        setTimeout(() => {\n           this.firstFade() \n           setTimeout(() => {\n               this.secondFade()\n               setTimeout(() => {\n                   this.thirdFade()\n               }, SECOND_FADE);\n           }, FIRST_FADE);\n        }, START_TIME);\n    }\n\n    componentWillUnmount = () => {\n        this.state.audio.pause()\n    }\n\n    //starts audio by assigning audio player to state.audio\n    startPage = () => {\n        document.getElementById(\"landing\").className = \"landing landing-before-transition\";\n        const audio = new Audio(process.env.PUBLIC_URL + \"/frontendAudio/mixolydian.wav\");\n        audio.play();\n        this.setState({ ...this.state, audio: audio })\n    }\n\n    //changes opacity of entire component from 1 to .7\n    firstFade = () => {\n        let count = 0;\n        const handler = setInterval(() => {\n            count++;\n            const newOpacity = 1 - (count * .3 * INTERVAL_TIME / FIRST_FADE);\n            this.setState({ ...this.state, opacityLevels: {\n                landing: newOpacity, title: 0, menu: 0\n            } })\n            if (count >= FIRST_FADE / INTERVAL_TIME) {\n                clearInterval(handler);\n                this.setState({ ...this.state, opacityLevels: {\n                    landing: 1, title: 0, menu: 0\n                } })\n                document.getElementById(\"landing\").className = \"landing landing-after-transition\";\n            }\n        }, INTERVAL_TIME);\n    }\n\n    //background opacity remains at .7 (handled in css) while title fades in\n    secondFade = () => {\n        let count = 0;\n        const handler = setInterval(() => {\n            count++;\n            const newOpacity = count * INTERVAL_TIME / SECOND_FADE;\n            this.setState({ ...this.state, opacityLevels: {\n                landing: 1, title: newOpacity, menu: 0\n            } })\n            if (count >= SECOND_FADE / INTERVAL_TIME) {\n                clearInterval(handler);\n            }\n        }, INTERVAL_TIME);\n    }\n\n    //menu options fade in\n    thirdFade = () => {\n        let count = 0;\n        const handler = setInterval(() => {\n            count++;\n            const newOpacity = count * INTERVAL_TIME / THIRD_FADE;\n            this.setState({ ...this.state, opacityLevels: {\n                landing: 1, title: 1, menu: newOpacity\n            } })\n            if (count >= THIRD_FADE / INTERVAL_TIME) {\n            }\n        }, INTERVAL_TIME);\n    }\n\n\n    render() {\n\n        return (\n            <>\n            <div id=\"landing\" style={{opacity: this.state.opacityLevels.landing}}>\n                <h1 className=\"landing-title\" style={{opacity: this.state.opacityLevels.title}}>\n                    C O U N T E R P O I N T &emsp; &emsp; G E N E R A T O R\n                </h1>\n                <div id=\"menu\" className=\"landing-menu\" style={{opacity: this.state.opacityLevels.menu}}>\n                    <Link to=\"/create\">\n                        <h3 className=\"menu-option\">GENERATE EXAMPLES</h3>\n                    </Link>\n                    <Link to=\"/gallery\">\n                        <h3 className=\"menu-option\">GALLERY</h3>\n                    </Link>\n                    <Link to=\"/about\">\n                        <h3 className=\"menu-option\">ABOUT</h3>\n                    </Link>\n                </div>\n            </div>\n            </>\n        );\n    }\n\n}\n\nexport default Landing ","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"../css/Enter.css\"\n\nclass Enter extends React.Component {\n\n\n    render() {\n\n        return (\n                <div className=\"enter\">\n                    <Link to=\"/landing\">\n                    <div className=\"click-to-enter\">\n                        COUNTERPOINT GENERATOR<br />\n                       <hr />\n                        CLICK TO ENTER\n                    </div>\n                    </Link>\n                </div>\n        );\n    }\n\n}\n\nexport default Enter","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"../css/Navbar.css\";\n\nclass Navbar extends React.Component {\n\n    render() {\n\n        return (\n            <div className=\"navbar\">\n                <div className=\"navbar-title\">\n                    COUNTERPOINT GENERATOR\n                </div>\n                <div className=\"menu-items\">\n                    <div className=\"menu-link\" onClick={() => window.location.reload()}>\n                        <Link to=\"/create\">CREATE</Link>\n                    </div>\n                    <div className=\"menu-link\" onClick={() => window.location.reload()}>\n                        <Link to=\"/gallery\">GALLERY</Link>\n                    </div>\n                    <div className=\"menu-link\" onClick={() => window.location.reload()}>\n                        <Link to=\"/about\">ABOUT</Link>\n                    </div>\n                    <div className=\"menu-link\">\n                        <Link to=\"/landing\">HOME</Link>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default Navbar\n","import React from \"react\";\n\nclass SelectStepHeader extends React.Component {\n\n    render() {\n        return (\n            <>\n            {\n                this.props.showGoBackButton && \n                <div className=\"go-back-button\" onClick={this.props.goBackFunction}>\n                    &#x2190; \n                </div>\n            }\n            {\n                !this.props.showGoBackButton && \n                <div className=\"back-button-placeholder\">filler</div>\n            }\n            <h1 className=\"create-title\">BUILD YOUR OWN EXAMPLE</h1>\n            <h2 className=\"step-title\">{this.props.stepTitle}</h2>\n            <div className=\"step-description\">{this.props.stepDescription}</div>\n            <hr className=\"step-header-rule\" />\n            </>\n        );\n    }\n}\n\nexport default SelectStepHeader;","import React from \"react\";\n\nimport SelectStepHeader from \"./SelectStepHeader\";\n\nimport \"../css/SelectType.css\";\n\nclass SelectType extends React.Component {\n\n    handleClick = async newValue => {\n        await this.props.updateValue(newValue);\n        this.props.goForward();\n    }\n\n    render() {\n\n        const stepTitle = \"STEP 1: CHOOSE TYPE\";\n        const stepDescription = `Select a type of counterpoint exercise for the algorithm to generate. \\r\\n\n                                This will be a short musical composition in the style of the Italian Renaissance composer Giovanni Pierluigi da Palestrina.`\n\n        return (\n            <>\n            <SelectStepHeader \n                stepTitle={stepTitle}\n                showGoBackButton={false}\n                stepDescription={stepDescription}\n            />\n            <div className=\"step-content\">\n                <div className=\"show-types\">\n                    <div className=\"type-title solo-melody-title\">Solo Melodies: (simplest/fastest)</div>\n                    <div className=\"type-selection-container\">\n                        <div className=\"type-selection cantus-firmus\" onClick={() => this.handleClick(\"cantusFirmus\")}>\n                            <div className=\"type-name\">Cantus Firmus</div>\n                            <span className=\"complexity-warning\">(1-5 seconds)</span>\n                            <div className=\"type-description\">Simple whole-note melody that exemplifies the most basic rules of \n                            melody in <a href=\"https://en.wikipedia.org/wiki/Giovanni_Pierluigi_da_Palestrina\" onClick={e => e.stopPropagation()} target=\"_blank\">\n                                Palestrina-style\n                                </a>\n                            </div>\n                            <div className=\"preview-image cantus-firmus-preview\" ></div>\n                        </div>\n                        <div className=\"type-selection free-melody\" onClick={() => this.handleClick(\"freeMelody\")}>\n                            <div className=\"type-name\">Free Melody</div>\n                            <span className=\"complexity-warning\">(1-10 seconds)</span>\n                            <div className=\"type-description\">Complete melody with different rhythmic values; displays<br /> all the rules of \n                            melody in <br /> Palestrina-style\n                            </div>\n                            <div className=\"preview-image free-melody-preview\" ></div>\n                        </div>\n                    </div>\n                    <hr />\n                    <div className=\"type-title species-counterpoint-title\">Species Counterpoint: (intermediate)</div>\n                    <div className=\"type-selection-container\">\n                        <div className=\"type-selection first-species\" onClick={() => this.handleClick(\"twoPartFirstSpecies\")}>\n                            <div className=\"type-name\">First Species</div>\n                            <span className=\"complexity-warning\">(5-10 seconds)</span>\n                            <div className=\"type-description\">Whole-note melody set against<br /> a Cantus Firmus; exemplifies<br />  the most basic rules of <br /> harmony:\n                            all intervals between t<br /> wo simultaneous notes <br /> are <a href=\"https://en.wikipedia.org/wiki/Consonance_and_dissonance\" onClick={e => e.stopPropagation()} target=\"_blank\">\n                                consonant\n                                </a>\n                            </div>\n                            <div className=\"preview-image first-species-preview\" ></div>\n                        </div>\n                        <div className=\"type-selection second-species\" onClick={() => this.handleClick(\"twoPartSecondSpecies\")}>\n                            <div className=\"type-name\">Second Species</div>\n                            <span className=\"complexity-warning\">(5-15 seconds)</span>\n                            <div className=\"type-description\">Half-note melody set against<br />  a Cantus Firmus; exemplifies <br /> simplest rules \n                            of <a href=\"https://en.wikipedia.org/wiki/Consonance_and_dissonance\" onClick={e => e.stopPropagation()} target=\"_blank\">\n                                dissonance\n                                </a> <br /> in harmony: dissonances <br /> only occur on weak beats\n                            </div>\n                            <div className=\"preview-image second-species-preview\" ></div>\n                        </div>\n                        <div className=\"type-selection third-species\" onClick={() => this.handleClick(\"twoPartThirdSpecies\")}>\n                            <div className=\"type-name\">Third Species</div>\n                            <span className=\"complexity-warning\">(5-20 seconds)</span>\n                            <div className=\"type-description\">Quarter-note melody set against<br />  a Cantus Firmus; exemplifies <br /> more complex rules of <br /> dissonance in harmony:\n                            <br /> several types of dissonance <br /> occur on weak beats</div>\n                            <div className=\"preview-image third-species-preview\" ></div>\n                        </div>\n                        <div className=\"type-selection fourth-species\" onClick={() => this.handleClick(\"twoPartFourthSpecies\")}>\n                            <div className=\"type-name\">Fourth Species</div>\n                            <span className=\"complexity-warning\">(20-30 seconds)</span>\n                            <div className=\"type-description\">Half-note and syncopated <br />whole-note  melody set against<br /> a Cantus Firmus; \n                            dissonances <br />can occur on strong beats<br /> in the form of suspensions</div>\n                            <div className=\"preview-image fourth-species-preview\" ></div>\n                        </div>\n                        <div className=\"type-selection fifth-species\" onClick={() => this.handleClick(\"twoPartFifthSpecies\")}>\n                            <div className=\"type-name\">Fifth Species</div>\n                            <span className=\"complexity-warning\">(5-30 seconds)</span>\n                            <div className=\"type-description\">Free melody set against a <br /> Cantus Firmus; combines all <br />rules of dissonance and harmony</div>\n                            <div className=\"preview-image fifth-species-preview\" ></div>\n                        </div>\n                    </div>\n                    <hr />\n                    <div className=\"type-title two-part-counterpoint-title\">Two Part Counterpoint: (most complex)</div>\n                    <div className=\"type-selection-container\">\n                        <div className=\"type-selection free-counterpoint\" onClick={() => this.handleClick(\"twoPartFreeCounterpoint\")}>\n                            <div className=\"type-name\">Free Counterpoint</div>\n                            <span className=\"complexity-warning\">(20-40 seconds)</span>\n                            <div className=\"type-description\">Two free melodies set against <br /> each other</div>\n                            <div className=\"preview-image free-counterpoint-preview\" ></div>\n                        </div>\n                        <div className=\"type-selection imitative-counterpoint\" onClick={() => this.handleClick(\"twoPartImitativeCounterpoint\")}>\n                            <div className=\"type-name\">Imitative Counterpoint</div>\n                            <span className=\"complexity-warning\">(20-60 seconds)</span>\n                            <div className=\"type-description\">Two free melodies that begin<br />  with the same theme or motif</div>\n                            <div className=\"preview-image imitative-counterpoint-preview\" ></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            </>\n        );\n    }\n}\n\nexport default SelectType;","import React from \"react\";\n\nimport SelectStepHeader from \"./SelectStepHeader\";\n\nimport \"../css/SelectModes.css\";\n\nclass SelectMode extends React.Component {\n\n    handleClick = async newValue => {\n        await this.props.updateValue(newValue);\n        this.props.goForward();\n    }\n\n    render() {\n        const stepTitle = \"STEP 2: CHOOSE A MODE\";\n        const stepDescription = `Church modes are similar to the concepts of keys in music.  They define the main and supplemental \n                                pitches available for a composition as well as the main note (\"tonic\" or \"final\") that a piece of music \n                                tends to revolve around or end on.`\n        return (\n            <>\n            <SelectStepHeader \n                stepTitle={stepTitle}\n                showGoBackButton={true}\n                goBackFunction={this.props.goBackward}\n                stepDescription={stepDescription}\n            />\n            <div className=\"step-content\">\n                <div className=\"show-modes\">\n                    <div className=\"mode-selection ionian\" onClick={() => this.handleClick(\"ionian\")}>\n                        <div className=\"mode-header\">\n                            <h3 className=\"mode-selection-title\">Ionian</h3>\n                            <p className=\"mode-pitches\">( do re mi fa sol la si do )</p>\n                        </div>\n                        <p className=\"mode-quote\"><em>“…simple as ‘Do Re Mi’”</em><br /><br /> — Michael Jackson</p>\n                    </div>\n                    <div className=\"mode-selection dorian\" onClick={() => this.handleClick(\"dorian\")}>\n                    <div className=\"mode-header\">\n                            <h3 className=\"mode-selection-title\">Dorian</h3>\n                            <p className=\"mode-pitches\">( re mi fa sol la si do re )</p>\n                        </div>\n                        <p className=\"mode-quote\"><em>“...harmony that would fittingly <br /> imitate the utterances and<br /> accents of a brave man who is <br /> engaged in warfare or in any <br /> enforced business”</em>\n                        <br /><br /> — Plato</p>\n                    </div>\n                    <div className=\"mode-selection phrygian\" onClick={() => this.handleClick(\"phrygian\")}>\n                    <div className=\"mode-header\">\n                            <h3 className=\"mode-selection-title\">Phrygian</h3>\n                            <p className=\"mode-pitches\">( mi fa sol la si do re mi )</p>\n                        </div>\n                        <p className=\"mode-quote\"><em>“…for such a man engaged in <br /> works of peace, not enforced but <br /> voluntary, either trying to<br />  persuade somebody of something <br /> and imploring him”</em>\n                        <br /><br /> — Plato</p>\n                    </div>\n                    <div className=\"mode-selection lydian\" onClick={() => this.handleClick(\"lydian\")}>\n                    <div className=\"mode-header\">\n                            <h3 className=\"mode-selection-title\">Lydian</h3>\n                            <p className=\"mode-pitches\">( fa sol la si do re mi fa )</p>\n                        </div>\n                        <p className=\"mode-quote\"><em>“…and ever, against eating<br />cares, lap me in soft Lydian airs”</em><br /><br /> — John Milton</p>\n                    </div>\n                    <div className=\"mode-selection mixolydian\" onClick={() => this.handleClick(\"mixolydian\")}>\n                    <div className=\"mode-header\">\n                            <h3 className=\"mode-selection-title\">Mixolydian</h3>\n                            <p className=\"mode-pitches\">( sol la si do re mi fa sol )</p>\n                        </div>\n                        <p className=\"mode-quote\"><em>“Some of them make men sad<br />  and grave, like the so called <br /> Mixolydian”</em><br /><br /> — Aristotle</p>\n                    </div>\n                    <div className=\"mode-selection aeolian\" onClick={() => this.handleClick(\"aeolian\")}>\n                    <div className=\"mode-header\">\n                            <h3 className=\"mode-selection-title\">Aeolian</h3>\n                            <p className=\"mode-pitches\">( la si do re mi fa sol la )</p>\n                        </div>\n                        <p className=\"mode-quote\"><em>“The perfection of conversation is <br /> not to play a regular sonata, <br /> but, like the Aeolian harp, <br /> to await the inspiration of the <br /> passing breeze”</em>\n                        <br /><br /> — Edmund Burke</p>\n                    </div>\n                </div>\n            </div>\n            </>\n        );\n    }\n}\n\nexport default SelectMode;","import React from \"react\";\n\nimport SelectStepHeader from \"./SelectStepHeader\";\n\nimport \"../css/SelectRanges.css\";\n\nclass SelectRanges extends React.Component {\n\n    state = {\n        selected: [],\n        selectedIndex: null\n    }\n\n    //determines whether user needs to select one vocal range or two adjacent vocal ranges depending on the selected exercise\n    getNumberOfLines = () => {\n        return [\"cantusFirmus\", \"freeMelody\"].includes(this.props.currentSelections.type) ? 1 : 2;\n    }\n\n    handleClick = async (vocalRange, i) => {\n        if (this.getNumberOfLines() === 2) {\n            switch (i) {\n                case 0:\n                    await this.props.updateValue([\"alto\", \"soprano\"]);\n                    break;\n                case 1:\n                    await this.props.updateValue([\"tenor\", \"alto\"]);\n                    break;\n                default:\n                    await this.props.updateValue([\"bass\", \"tenor\"]);\n            }\n        } else {\n            await this.props.updateValue([vocalRange]);\n        }\n        this.props.goForward();\n    }\n\n    render() {\n        const vocalRangesList = this.getNumberOfLines() === 2 ? [[\"soprano\", \"alto\"], [\"alto\", \"tenor\"], [\"tenor\", \"bass\"]]: [[\"soprano\"], [\"alto\"], [\"tenor\"], [\"bass\"]];\n        const instructionString = this.getNumberOfLines() === 2 ? \"TWO VOCAL RANGES\" : \"A VOCAL RANGE\";\n        const stepTitle = `STEP 3: CHOOSE ${instructionString}`\n        return (\n            <>\n            <SelectStepHeader \n                stepTitle={stepTitle}\n                showGoBackButton={true}\n                goBackFunction={this.props.goBackward}\n            />\n            <div className=\"step-content\">\n                <div className=\"choose-range-content\">\n                    <div className=\"ranges-container\">\n                        {\n                            vocalRangesList.map((vocalRanges, i) => {\n                                return (\n                                    <div \n                                        key={i}\n                                        className=\"range-list\" \n                                        onClick={this.getNumberOfLines() === 2 ? () => this.handleClick(\"\", i) : null}\n                                    >\n                                        {\n                                            vocalRanges.map((vocalRange, j) => {\n                                                const classList = \"range \" + vocalRange\n                                                return (\n                                                <div key={j}>\n                                                <div className={classList} onClick={() => this.handleClick(vocalRange, i)}>\n                                                    <div className=\"range-text\">{vocalRange.toUpperCase()}</div>\n                                                </div>\n                                                {\n                                                    this.getNumberOfLines() === 2 && j !== vocalRanges.length - 1 && \n                                                    <div className=\"between-ranges\">and</div>\n                                                }\n                                                </div>\n                                                );\n                                            })\n                                        }\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n            </div>\n            </>\n        );\n    }\n}\n\nexport default SelectRanges;","import React from \"react\";\n\nimport SelectStepHeader from \"./SelectStepHeader\";\n\nimport \"../css/SelectCantusFirmusIndex.css\";\n\nclass SelectCantusFirmusIndex extends React.Component {\n\n    handleClick = async newValue => {\n        await this.props.updateValue(newValue);\n        this.props.goForward();\n    }\n\n    render() {\n        const stepTitle = \"STEP 4: CHOOSE ORIENTATION\";\n        return (\n            <>\n            <SelectStepHeader \n                stepTitle={stepTitle}\n                showGoBackButton={true}\n                goBackFunction={this.props.goBackward}\n            />\n            <div className=\"step-content\">\n                <div className=\"cantus-firmus-index-options\">\n                    <div className=\"cantus-firmus-index-option\" onClick={() => this.handleClick(0)}>\n                        Top line: Counterpoint<br />Bottom line: Cantus Firmus\n                    </div>\n                    <div className=\"cantus-firmus-index-option\" onClick={() => this.handleClick(1)}>\n                        Top line: Cantus Firmus<br />Bottom line: Counterpoint\n                    </div>\n                </div>\n            </div>\n            </>\n        );\n    }\n}\n\nexport default SelectCantusFirmusIndex;","import React from \"react\";\n\nimport SelectStepHeader from \"./SelectStepHeader\";\n\nimport \"../css/SelectLength.css\";\n\nclass SelectLength extends React.Component {\n\n    handleClick = async newValue => {\n        await this.props.updateValue(newValue);\n        this.props.goForward();\n    }\n\n    render() {\n        const stepNumber = this.props.currentSelections.type.\n            substring(this.props.currentSelections.type.length - 7) === \"Species\" ? 5 : 4;\n\n        const measureOptions = [\"twoPartFreeCounterpoint\", \"twoPartImitativeCounterpoint\"]\n            .includes(this.props.currentSelections.type) ? [16, 17, 18] : [8, 9, 10, 11, 12]\n\n        const stepTitle = `STEP ${stepNumber}: CHOOSE NUMBER OF MEASURES`\n        return (\n            <>\n            <SelectStepHeader \n                stepTitle={stepTitle}\n                showGoBackButton={true}\n                goBackFunction={this.props.goBackward}\n            />\n            <div className=\"step-content\">\n                <div className=\"length-options\">\n                    {\n                        measureOptions.map((measure, i) => {\n                            return (\n                                <div \n                                    key={i} \n                                    className=\"measure-option\"\n                                    onClick={() => this.handleClick(measure)}\n                                >\n                                    {measure}\n                                </div>\n                            );\n                        })\n                    }\n                </div>\n            </div>\n            </>\n        );\n    }\n}\n\nexport default SelectLength;","import React from \"react\";\nimport AudioPlayer from \"react-h5-audio-player\";\nimport \"react-h5-audio-player/lib/styles.css\";\n\nimport \"../css/DisplayResult.css\";\n\nclass DisplayResult extends React.Component {\n\n    state = {\n        waitingForResults: true,\n        waitingForResultsDisplayPhase: 0,\n        blobURL: null, //this will be the url for the MIDI file we eventually receive from the backend API\n        midiPlayer: window.MIDIjs, //MIDIjs is in the window scope through a cdn in the public index.html file\n        playing: false, //keeps track of whether the received MIDI file is currently playing\n        inProgress: false, //keeps track of whether the received MIDI file is currently either playing or paused\n        midiLength: 100\n    }\n\n    componentDidMount = async () => {\n        const jsonRequest = JSON.stringify(this.props.currentSelections);\n\n        //sets a waitingForResultsDisplayPhase while HTTP request is pending, that will be used to set the changing \n        //message\n        const handler = setInterval(() => {\n            if (this.state.blobURL) {\n                clearInterval(handler);\n                this.setState({ ...this.state, waitingForResultsDisplayPhase: 0 });\n            } else {\n                let nextPhase = this.state.waitingForResultsDisplayPhase + 1\n                nextPhase %= 10;\n                this.setState({ ...this.state, waitingForResultsDisplayPhase: nextPhase });\n            }\n        }, 500);\n\n        //xml object will handle the request to the backend\n        const xml = new XMLHttpRequest();\n        xml.open(\"POST\", \"https://counterpoint-server.herokuapp.com/api\");\n        xml.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n        xml.responseType = \"blob\"; \n        //if request fails, remount the component and try again\n        xml.onerror = () => {\n            this.tryAgain();\n        }\n        xml.onload = e => {\n            const url = window.URL.createObjectURL(xml.response);\n            this.setState({ ...this.state, blobURL: url, playing: true, inProgress: true });\n            this.state.midiPlayer.play(url)\n            this.state.midiPlayer.get_duration(url, seconds => this.setState({ ...this.state, midiLength: seconds }));\n            this.state.midiPlayer.player_callback = data => {\n                //updates state when MIDI file finishes playing to show that file is no longer in progress\n                if (data.time > this.state.midiLength) {\n                    this.setState({ ...this.state, playing: false, inProgress: false });\n                }\n            }\n          };\n        xml.send(jsonRequest);\n        this.setState({ ...this.state, waitingForResults: false});\n\n    }\n\n    //plays or pauses MIDI file.  Sets inProgress to true\n    togglePlaying = () => {\n        if (this.state.playing) {\n            this.state.midiPlayer.pause();\n        } else if (this.state.inProgress) {\n            this.state.midiPlayer.resume();\n        } else {\n            this.state.midiPlayer.play(this.state.blobURL)\n        }\n        this.setState({ ...this.state, playing: !this.state.playing, inProgress: true });\n    }\n\n    componentWillUnmount = () => {\n        this.state.midiPlayer.stop()\n    }\n\n    getWaitingForResultsDisplayString = () => {\n        switch (this.state.waitingForResultsDisplayPhase) {\n            case 0:\n                return \"\";\n            case 1:\n                return \".\";\n            case 2:\n                return \"..\";\n            case 3:\n                return \"...\";\n            default:\n                return \"...composing counterpoint\";\n        }\n    }\n\n    //downloads MIDI file.  Called when user clicks download button\n    downloadAudio = () => {\n        const link = document.createElement(\"a\");\n        link.download = \"counterpoint.mid\";\n        link.href = this.state.blobURL;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    }\n\n    //re-mounts component, thus resending xml request\n    tryAgain = () => {\n        this.props.refreshDisplayResult();\n    }\n\n    //changes Create component phase back to starting variables\n    startNew = () => {\n        this.props.refreshState();\n    }\n\n    render() {\n        const waitingForResultsDisplayString = this.getWaitingForResultsDisplayString();\n\n        return (\n            <>\n            {\n                !this.state.blobURL && <div className=\"waiting-for-results\">{waitingForResultsDisplayString}</div>\n            }\n            {\n                this.state.blobURL && \n                <>\n                <h2 className=\"success-title\">Success!  The algorithm composed this piece based on your specifications!  \n                <br /><br />Click below to download it as a MIDI file, to generate another example with the same specifications, or to start again from the beginning</h2>\n                <div className=\"success-container\">\n                    <div className=\"toggle-button-outer\" onClick={this.togglePlaying}>\n                        <div className={this.state.playing ? \"pause-button\" : \"play-button\"}></div>\n                    </div>\n                    {/* <div className=\"audio-player-container\">\n                        <AudioPlayer\n                            autoPlay\n                            src={this.state.blobURL}\n                            showJumpControls={false}\n                            customAdditionalControls={[]}\n                            customVolumeControls={[]}\n                            layout=\"horizontal-reverse\"\n                        />\n                    </div> */}\n                </div>\n                <h2 className=\"download-button results-button\" onClick={this.downloadAudio}>Download MIDI</h2>\n                <h2 className=\"generate-option results-button\" onClick={this.tryAgain}>Try again with same parameters</h2>\n                <h2 className=\"or\">or</h2>\n                <h2 className=\"start-new results-button\" onClick={this.startNew}>Start from the beginning</h2>\n                </>\n    \n            }\n            </>\n        );\n    }\n}\n\nexport default DisplayResult;","import React from \"react\";\n\nimport \"../css/Footer.css\"\n\nclass Footer extends React.Component {\n\n\n    render() {\n\n        return (\n            <div className=\"footer\">\n                Alex Kelber, 2020\n            </div>\n        );\n    }\n\n}\n\nexport default Footer","import React from \"react\";\n\nimport Navbar from \"./Navbar\";\nimport SelectType from \"./SelectType\";\nimport SelectMode from \"./SelectMode\";\nimport SelectRanges from \"./SelectRanges\";\nimport SelectCantusFirmusIndex from \"./SelectCantusFirmusIndex\";\nimport SelectLength from \"./SelectLength\";\nimport DisplayResult from \"./DisplayResult\";\nimport Footer from \"./Footer\";\n\nimport \"../css/Create.css\"\n\nconst phases = {\n    SELECT_TYPE: \"SELECT_TYPE\",\n    SELECT_MODE: \"SELECT_MODE\",\n    SELECT_RANGES: \"SELECT_RANGES\",\n    SELECT_CANTUS_FRMUS_INDEX: \"SELECT_CANTUS_FIRMUS_INDEX\",\n    SELECT_LENGTH: \"SELECT_LENGTH\",\n    DISPLAY_RESULT: \"DISPLAY_RESULT\"\n}\n\n\nclass Create extends React.Component {\n\n    //phase keeps track of which step the user is in, and thus which component should be rendered\n    //selected values will form the JSON request sent to the backend\n\n    state = {\n        currentPhase: phases.SELECT_TYPE,\n        selectedValues: {\n            type: null, mode: null, lines: null, length: null, cantusFirmusIndex: 0\n        }\n    }\n\n    //returns a function (to be passed down through props) that updates state by assining a value to a particular\n    //category in selectedValues\n    getUpdateFunction = parameterToChange => {\n        const updateFunction = newValue => {\n            this.setState({\n                ...this.state,\n                selectedValues: {\n                    ...this.state.selectedValues,\n                    [parameterToChange]: newValue\n                }\n            });\n        }\n        return updateFunction;\n    }\n\n    //returns a function (to be passed down through props) that changes state to the specificed phase\n    getChangePhaseFunction = newPhase => {\n        const getChangePhaseFunction = () => {\n            this.setState({\n                ...this.state,\n                currentPhase: newPhase\n            });\n        }\n        return getChangePhaseFunction;\n    }\n\n    //returns state to default values\n    refreshState = () => {\n        this.setState({\n            currentPhase: phases.SELECT_TYPE,\n            selectedValues: {\n                type: null, mode: null, lines: null, length: null, cantusFirmusIndex: 0\n            }\n        })\n    }\n\n    //changes the phase twice in order to re-mount the DisplayResult component (and thus re-send the request to the backend called in \n    //that component's componentDidMount function)\n    refreshDisplayResult = async () => {\n        await this.setState({\n            ...this.state,\n            currentPhase: phases.SELECT_LENGTH\n        });\n        this.setState({\n            ...this.state,\n            currentPhase: phases.DISPLAY_RESULT\n        });\n    }\n\n    render() {\n        let DisplayComponent;\n        let goForward;\n        let goBackward;\n        let updateValue;\n        switch (this.state.currentPhase) {\n            case phases.SELECT_TYPE:\n                DisplayComponent = SelectType;\n                goForward = this.getChangePhaseFunction(phases.SELECT_MODE);\n                updateValue = this.getUpdateFunction(\"type\");\n                break;\n            case phases.SELECT_MODE:\n                DisplayComponent = SelectMode;\n                goForward = this.getChangePhaseFunction(phases.SELECT_RANGES);\n                goBackward = this.getChangePhaseFunction(phases.SELECT_TYPE);\n                updateValue = this.getUpdateFunction(\"mode\");\n                break;\n            case phases.SELECT_RANGES:\n                DisplayComponent = SelectRanges;\n                if (this.state.selectedValues.type.substring(this.state.selectedValues.type.length - 7) === \"Species\") {\n                    goForward = this.getChangePhaseFunction(phases.SELECT_CANTUS_FRMUS_INDEX);\n                } else {\n                    goForward = this.getChangePhaseFunction(phases.SELECT_LENGTH);\n                }\n                goBackward = this.getChangePhaseFunction(phases.SELECT_MODE);\n                updateValue = this.getUpdateFunction(\"lines\");\n                break;\n            case phases.SELECT_CANTUS_FRMUS_INDEX:\n                DisplayComponent = SelectCantusFirmusIndex;\n                goForward = this.getChangePhaseFunction(phases.SELECT_LENGTH);\n                goBackward = this.getChangePhaseFunction(phases.SELECT_RANGES);\n                updateValue = this.getUpdateFunction(\"cantusFirmusIndex\");\n                break;\n            case phases.SELECT_LENGTH:\n                DisplayComponent = SelectLength;\n                goForward = this.getChangePhaseFunction(phases.DISPLAY_RESULT);\n                if (this.state.selectedValues.type.substring(this.state.selectedValues.type.length - 7) === \"Species\") {\n                    goBackward = this.getChangePhaseFunction(phases.SELECT_CANTUS_FRMUS_INDEX);\n                } else {\n                    goBackward = this.getChangePhaseFunction(phases.SELECT_RANGES);\n                }\n                updateValue = this.getUpdateFunction(\"length\");\n                break;\n            case phases.DISPLAY_RESULT:\n                DisplayComponent = DisplayResult;\n                break;\n        } \n\n        return (\n            <div className=\"main\">\n                <Navbar />\n                <DisplayComponent\n                    goForward={goForward}\n                    goBackward={goBackward}\n                    updateValue={updateValue}\n                    currentSelections={this.state.selectedValues}\n                    refreshState={this.refreshState}\n                    refreshDisplayResult={this.refreshDisplayResult}\n                />\n                <Footer />\n            </div>\n        );\n    }\n\n}\n\nexport default Create ","import React from \"react\";\nimport AudioPlayer from \"react-h5-audio-player\";\n\nimport Navbar from \"./Navbar\";\nimport Footer from \"./Footer\";\n\nimport \"../css/Gallery.css\"\n\nconst modes = [\"ionian\", \"dorian\", \"phrygian\", \"lydian\", \"mixolydian\", \"aeolian\"];\n\nclass Gallery extends React.Component {\n\n    //keeps track of which example is being displayed\n    state = { selectedMode: null }\n\n    selectMode = mode => {\n        this.setState({ ...this.state, selectedMode: mode })\n    }\n\n\n    render() {\n\n        const audioFiles = [\n            `${process.env.PUBLIC_URL}/frontendAudio/ionian.wav`, \n            `${process.env.PUBLIC_URL}/frontendAudio/dorian.wav`, \n            `${process.env.PUBLIC_URL}/frontendAudio/phrygian.wav`, \n            `${process.env.PUBLIC_URL}/frontendAudio/lydian.wav`, \n            `${process.env.PUBLIC_URL}/frontendAudio/mixolydian.wav`, \n            `${process.env.PUBLIC_URL}/frontendAudio/aeolian.wav`\n        ];\n        const imageFiles = [\n            `${process.env.PUBLIC_URL}/images/ionian_example.png`, \n            `${process.env.PUBLIC_URL}/images/dorian_example.png`, \n            `${process.env.PUBLIC_URL}/images/phrygian_example.png`, \n            `${process.env.PUBLIC_URL}/images/lydian_example.png`, \n            `${process.env.PUBLIC_URL}/images/mixolydian_example.png`, \n            `${process.env.PUBLIC_URL}/images/aeolian_example.png`\n        ];\n        \n\n        return (\n            <div className=\"gallery\">\n                <Navbar />\n                <h1 className=\"gallery-title\">GALLERY</h1>\n                <div className=\"gallery-middle-section\">\n                    <h2 className=\"gallery-instructions\">Click on a mode to view one of the best examples of imitative counterpoint produced by the program</h2>\n                    <div className=\"gallery-container\">\n                        <div className=\"list-modes\">\n                            {\n                                modes.map((mode, i) => {\n                                    return (\n                                        <div \n                                            key={i} \n                                            className={ mode === this.state.selectedMode ? \"mode-title-container selected-mode-title\": \"mode-title-container\"}\n                                            onClick={() => this.selectMode(mode)} \n                                        >\n                                            <div className=\"mode-title\">\n                                                {mode.charAt(0).toUpperCase() + mode.slice(1)}\n                                            </div>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                    </div>\n                </div>\n                {\n                    modes.map((mode, i) => {\n                        if (this.state.selectedMode === mode) {\n                            return (\n                                <div key={i} className=\"gallery-result\">\n                                    <div className=\"gallery-audio-wrapper\">\n                                        <AudioPlayer\n                                            autoPlay\n                                            src={audioFiles[i]}\n                                            showJumpControls={false}\n                                            customAdditionalControls={[]}\n                                            customVolumeControls={[]}\n                                            layout=\"horizontal-reverse\"\n                                        />\n                                    </div>\n                                    <img className=\"gallery-image\" src={imageFiles[i]} />\n                                </div>\n                            )\n                        }\n                    })\n                }\n                <div className=\"gallery-space\"></div>\n                <Footer />\n            </div>\n        );\n    }\n\n}\n\nexport default Gallery","import React from \"react\";\n\n\nimport Navbar from \"./Navbar\";\nimport Footer from \"./Footer\";\n\nimport \"../css/About.css\"\n\nclass About extends React.Component {\n\n    render() {\n\n        return (\n            <div className=\"about\">\n                <Navbar />\n                <h1 className=\"create-title\">ABOUT</h1>\n                <div className=\"about-content\">\n                    <h3 className=\"about-heading\">\n                        To learn more about this program from a technical standpoint,\n                        visit the <a href=\"https://github.com/ZalmanKelber/Counterpoint-frontend\">Github repository</a>\n                    </h3>\n                    <h3 className=\"about-heading\">\n                        To view a brief demo and explanation, \n                        watch <a href=\"https://www.youtube.com/watch?v=WRb-gmUWNR0&feature=youtu.be\">this video</a>\n                    </h3>\n                    <h3 className=\"about-heading\">\n                        To learn more,  \n                        read <a href=\"https://alexkelber.medium.com/using-a-backtracking-algorithm-to-generate-two-part-imitative-polyphony-in-the-style-of-palestrina-41dac93023b0\">\n                        this Medium post</a>\n                    </h3> \n                    <h3 className=\"about-heading\">\n                        To learn the basics of what this project is, read the following Q & A\n                    </h3>\n                    <br /><br /><hr />\n                    <h3 className=\"about-question\">Q: I don't know anything about Music Theory or Music History.  What is this?</h3>\n                    <p>\n                        <em>Counterpoint</em> refers to a series of musical composition exercises that have been considered fundamental to \n                        Western musical education for centuries.  This program uses an algorithm to compose and display examples of several kinds of these exercises.\n                    </p>\n                    <p>\n                        There are many different <em>styles</em> of counterpoint.  These examples are in the style of \n                        the 16th century Italian composer <a href=\"https://en.wikipedia.org/wiki/Giovanni_Pierluigi_da_Palestrina\">\n                        Giovanni Pierluigi da Palestrina</a>, whose works are often considered a pinnacle of <em>contrapuntal</em> music.\n                    </p>\n                    <h3 className=\"about-question\">Q: so what exactly is counterpoint?</h3>\n                    <p>\n                        Counterpoint teaches the art of writing melody and harmony, and does so in a succession of exercises that gradually\n                        increase in difficulty and complexity.  The most basic exericise is to write a <em>Cantus Firmus</em> – a \n                        simple unaccompanied melody that has no rhythmic complexity.  The focus is entirely on the order of pitches.\n                    </p>\n                    <p>\n                        Subsequent exercises involve writing two simultaneous, polyphonic melodies: one is a Cantus Firmus.  The other is a form \n                        of <em>Species Counterpoint</em>.  Species Counterpoint melodies are different kinds of simple melodies that demonstrate \n                        various rules that are specific to particular rhythms, as well as corresponding rules for \n                        harmony between the Counterpoint line and the Cantus Firmus.  The First Species is essentially identical to a Cantus Firmus.  \n                        The Species culminate with the Fifth Species, which is essentially a free melody – one we might actually encounter in the \n                        works of Palestrina.\n                    </p>\n                    <p>\n                        After Species Counterpoint, the next task is to combine two free melodies (or Fifth Species melodies) together, utilizing \n                        all of the rules of harmony and melody that have previously been learned.  In <em>Imitative Counterpoint</em>, the culmination\n                        of these exercises, each melody begins, at different times, with the same theme or motif. \n                    </p>\n                    <h3 className=\"about-question\">Q: how many rules of harmony and melody are there?</h3>\n                    <p>\n                        By the time we've reached counterpoint that involves two free melodies against each other, there are several dozen \n                        rules of harmony and melody that have to be followed.  This high number is because Palestrina-style is particularly \n                        strict in a variety of ways.\n                    </p>\n                    <h3 className=\"about-question\">Q: Are there any rules that non-musical laypeople might understand?</h3>\n                    <p>\n                        Yes!  In this style of counterpoint, every melody can reach its highest note only once.  And in the First, Second\n                        and Third Species, the one instance of the highest note can't occur directly in the middle of the melody.\n                    </p>\n                    <p>\n                        As a <em>slightly</em> more complicated example, in the First, Second and Third Species in Palestrina-style, \n                        when subsequent notes in a melody move <em>upward</em>, larger intervals (that is, the distance between notes) must\n                        precede smaller intervals.  When the melody moves <em>downward</em>, smaller intervals must precede larger intervals.\n                        These rules are somewhat loosened in the Fourth and Fifth Species.\n                    </p>\n                    <p>\n                        The rules regarding harmony generally involve the question of when <a href=\"https://en.wikipedia.org/wiki/Consonance_and_dissonance\">\n                        dissonant intervals</a> between the two melodies are allowed.  These rules tend to be fairly complicated because the question \n                        of whether or not a dissonant interval is allowed generally has to do with the melodic context of both voices.\n                    </p>\n                    <h3 className=\"about-question\">Q: Are these rules \"rules\" or \"guidelines?\"</h3>\n                    <p>\n                        That's an extremely complicated question.  Renaissance Musical Theorists, in their writings, often thought of \n                        the rules of counterpoint as manifestations of a singular, unchanging and perfect divine natural order.  The complicated \n                        reality is that the actual corpus of music from this period often shows violations of various rules.  There are also\n                        unwritten rules that are largely followed (as was particularly apparent when this program was being written).  For the purpose \n                        of this program, certain rules are followed strictly.  Others are allowed but \"ranked\" unfavorably, so that they occasionally \n                        but infrequently appear in examples.\n                    </p>\n                    <h3 className=\"about-question\">Q: What's the gist of how this program composes these examples?  Neural networks?  Machine learning?</h3>\n                    <p>\n                        Actually, no.  The program that composes these pieces uses a <a href=\"https://en.wikipedia.org/wiki/Backtracking\">\n                        backtracking algorithm</a>.  In a given example, successive notes are placed one-by-one onto a melody, if they pass a series of \n                        rules.  If we arrive at a situation in which no notes can be legally placed, the previous note is removed and replaced with another one.  \n                        In this way, several correct solutions are generated.  These solutions are then scored, and the best one is returned.\n                    </p>\n                    <h3 className=\"about-question\">Q: Why can't I download an actual audio file of the examples I create as well as a pdf of the score?</h3>\n                    <p>\n                        This will likely be the next goal of the project.  Technologies that convert MIDI files to actual playable audio and generate PDF's of \n                        scores, such as fluidsynth and lilypond, tend to exist as desktop applications or command line interfaces.  There are currently no programs that\n                        perform these tasks programatically from python that can be installed as dependencies in deployment.\n                    </p>\n\n                    <h3 className=\"about-question\">Q: What are some of the other next steps for the project?</h3>\n                    <p>\n                        The program so far only writes examples with one or two simultaneous melodies.  Traditionally, this style of counterpoint \n                        culminates with five simultanous melodies.\n                    </p>\n                    <p>\n                        Switching from a backtracking algorithm to a local search algorithm has the possibility of dramatically increasing performance,\n                        however this will likely require a complete rewrite of most of the code.\n                    </p>\n                    <h3 className=\"about-question\">Q: Whoa.  Five simultaneous, independent melodies, obeying dozens of complex rules?\n                    What does that sound like</h3>\n                    <p>\n                        For a famous example of five-voice, imitative counterpoint, listen to Palestrina's motet, <a href=\"https://www.youtube.com/watch?v=nRmkj19i4Yk\">\n                        <em>Exultate Deo</em></a>.\n                    </p>\n                    <hr />\n                    <h3 className=\"about-heading\">Technologies used in this project:</h3>\n                    <p>Frontend: React, React Router Dom, React H5 Audio Player, MIDIjs</p>\n                    <p>API: Flask, Gunicorn, MIDIUtil</p>\n                    <h3 className=\"about-heading\">Photo Credits:</h3>\n                    <p>\n                        All images of Renaissance artwork from Wikimedia Commons.  All others images from <a href=\"https://pixabay.com/\">Pixabay</a>.\n                    </p>\n                    <p>\n                        Homepage: Jacques Gaimard, Navbar: Rob Porter, Gallery: Dimitris Vetsikas, Results Player: Enrique Lopez Garre, Thumbnail: Christo Anestev, \n                        Ionian box: Robert Balog, Dorian box: Goran Horvat, Phrygian box: Enrique Lopez Garre, Lydian box: Markus Wittmann, \n                        Mixolydian box: Hans Braxmeier, Aeolian box: Alexander Stein\n                    </p>\n\n\n                </div>\n                <Footer />\n            </div>\n        );\n    }\n\n}\n\nexport default About","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\n\nimport Landing from \"./Landing\";\nimport Enter from \"./Enter\";\nimport Create from \"./Create\";\nimport Gallery from \"./Gallery\";\nimport About from \"./About\";\n\nimport \"../css/App.css\"\n\nclass App extends React.Component {\n\n  componentDidMount = () => {\n    //API is currently hosted on Heroku's free tier.  Because the app takes several seconds to \"wake up\" the first time \n    //it's called after being dormant, a get request is sent when the frontend is first opened so that response times will be\n    //faster by the time the user actually sends a request\n    const herokuWakeup = new XMLHttpRequest();\n    herokuWakeup.open(\"GET\", \"https://counterpoint-server.herokuapp.com/api/wake_up\");\n    herokuWakeup.onload = e => {\n      console.log(\"response from herokuWakeup call:\", herokuWakeup.response)\n    }\n    herokuWakeup.send();\n  }\n\n  render() {\n\n    //note that HashRouter rather than BrowserRouter has to be used in order for deployment on GitHub pages\n\n    return (\n      <HashRouter>\n        <Route path=\"/landing\" exact component={Landing} />\n        <Route path=\"/create\" exact component={Create} />\n        <Route path=\"/gallery\" exact component={Gallery} />\n        <Route path=\"/about\" exact component={About} />\n        <Route path=\"/\" exact component={Enter} />\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n\n\n"],"sourceRoot":""}